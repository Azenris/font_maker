; Note the expected end of line is \n, not \r\n or \r
; <gridW> <gridH> <originLine>
; char <codepoint> <bearingX> <bearingY> <offfsetY> <width> <height> <advance>
; advance is typically X+W+1=A
; char 32 = space, w=spacing h=lineSpacing
info  8 8 6	  ;x  y  oy   w h   a
char  32       0  6   0   4 8   8	;
char  33       1  6   0   1 7   3	; !
char  34       1  6   0   3 2   5	; "
char  35       0  6   0   7 7   8	; #
char  36       1  6   0   5 7   7	; $
char  37       1  5   0   5 5   7	; %
char  38       1  6   0   6 7   8	; &
char  39       1  6   0   1 2   3	; '
char  40       1  6   0   3 7   5	; (
char  41       1  6   0   3 7   5	; )
char  42       1  6   0   7 7   9	; *
char  43       1  6   0   7 7   9	; +
char  44       1  2   1   2 4   4	; ,
char  45       1  3   0   6 1   8	; -
char  46       1  1   0   2 2   4	; .
char  47       1  5   0   6 6   8	; /
char  48       1  6   0   5 7   7	; 0
char  49       3  6   0   3 7   7	; 1
char  50       1  6   0   5 7   7	; 2
char  51       1  6   0   5 7   7	; 3
char  52       1  6   0   5 7   7	; 4
char  53       1  6   0   5 7   7	; 5
char  54       1  6   0   5 7   7	; 6
char  55       1  6   0   5 7   7	; 7
char  56       1  6   0   5 7   7	; 8
char  57       1  6   0   5 7   7	; 9
char  58       1  5   0   2 5   4	; :
char  59       1  5   0   2 7   4	; ;
char  60       1  6   0   4 7   6	; <
char  61       1  4   0   6 3   8	; =
char  62       1  6   0   4 7   6	; >
char  63       1  6   0   5 7   7	; ?
char  64       1  6   0   5 7   7	; @
char  65       1  6   0   5 7   7	; A
char  66       1  6   0   5 7   7	; B
char  67       1  6   0   5 7   7	; C
char  68       1  6   0   5 7   7	; D
char  69       1  6   0   5 7   7	; E
char  70       1  6   0   5 7   7	; F
char  71       1  6   0   5 7   7	; G
char  72       1  6   0   5 7   7	; H
char  73       1  6   0   3 7   5	; I
char  74       1  6   0   5 7   7	; J
char  75       1  6   0   5 7   7	; K
char  76       1  6   0   4 7   6	; L
char  77       1  6   0   7 7   9	; M
char  78       1  6   0   5 7   7	; N
char  79       1  6   0   5 7   7	; O
char  80       1  6   0   4 7   6	; P
char  81       1  6   0   5 8   7	; Q
char  82       1  6   0   5 7   7	; R
char  83       1  6   0   5 7   7	; S
char  84       1  6   0   5 7   7	; T
char  85       1  6   0   5 7   7	; U
char  86       1  6   0   5 7   7	; V
char  87       1  6   0   7 7   9	; W
char  88       1  6   0   5 7   7	; X
char  89       1  6   0   5 7   7	; Y
char  90       1  6   0   5 7   7	; Z
char  91       1  6   0   3 7   5	; [
char  92       1  5   0   6 6   8	; \
char  93       1  6   0   3 7   5	; ]
char  94       1  6   0   5 3   7	; ^
char  95       1 -1   0   6 1   8	; _
char  96       1  6   0   2 2   4	; `
char  97       1  5   0   6 6   8	; a
char  98       1  6   0   5 7   7	; b
char  99       1  4   0   4 5   6	; c
char 100       1  6   0   4 7   6	; d
char 101       1  4   0   5 5   7	; e
char 102       1  6   0   5 7   7	; f
char 103       1  4   0   6 6   8	; g
char 104       1  6   0   5 7   7	; h
char 105       1  5   0   1 6   3	; i
char 106       1  5   0   3 7   5	; j
char 107       1  6   0   4 7   6	; k
char 108       1  6   0   2 7   4	; l
char 109       0  4   0   8 5   9	; m
char 110       0  4   0   5 5   6	; n
char 111       1  4   0   5 5   7	; o
char 112       0  4   0   5 6   6	; p
char 113       1  4   0   5 6   7	; q
char 114       1  4   0   4 5   6	; r
char 115       1  4   0   4 5   6	; s
char 116       1  5   0   3 6   5	; t
char 117       1  4   0   5 5   7	; u
char 118       1  4   0   5 5   7	; v
char 119       1  4   0   7 5   9	; w
char 120       1  4   0   5 5   7	; x
char 121       1  4   0   4 6   6	; y
char 122       1  4   0   4 5   6	; z
char 123       1  6   0   4 6   6	; {
char 124       1  6   0   1 6   3	; |
char 125       1  6   0   4 6   6	; }
char 126       1  4   0   7 3   7	; ~
char 127       0  6   0   8 8   8	;  

; kerning <codepoint> <codepoint> <xoffset>
kerning 102       101       -1		; fe